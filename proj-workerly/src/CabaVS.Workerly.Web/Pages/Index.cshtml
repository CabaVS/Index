@page
@model CabaVS.Workerly.Web.Pages.Index
@{
    ViewData["Title"] = "Home";
}

<div class="d-grid gap-3">

    <!-- SESSION CARD -->
    <div class="card shadow-sm">
        <div class="card-header d-flex flex-column flex-md-row align-items-start align-items-md-center gap-2">
            <button class="btn btn-link p-0 text-decoration-none text-reset"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target="#sessionCardBody"
                    aria-expanded="false"
                    aria-controls="sessionCardBody">
                <h2 class="h5 mb-0">Session</h2>
            </button>

            @if (User.Identity?.IsAuthenticated ?? false)
            {
                <form method="post" asp-page="/Auth/Logout" class="ms-md-auto m-0">
                    <button type="submit" class="btn btn-outline-secondary btn-sm">
                        <i class="bi bi-box-arrow-right me-1"></i> Logout
                    </button>
                </form>
            }
            else
            {
                <a asp-page="/Auth/Login" class="btn btn-primary btn-sm ms-md-auto">
                    <i class="bi bi-box-arrow-in-right me-1"></i> Login
                </a>
            }
        </div>

        <div id="sessionCardBody" class="collapse">
            <div class="card-body">
                @if (User.Identity?.IsAuthenticated ?? false)
                {
                    <span class="badge text-bg-success mb-3">
                        <i class="bi bi-check2-circle me-1"></i> Authenticated
                    </span>

                    <h3 class="h6 mt-3">Your claims</h3>

                    <ul class="list-group list-group-flush small">
                        @foreach (var c in User.Claims.OrderBy(x => x.Type))
                        {
                            <li class="list-group-item">
                                <div class="row g-1">
                                    <div class="col-12 col-lg-6 text-body-secondary">
                                        @c.Type
                                    </div>
                                    <div class="col-12 col-lg-6">
                                        <code class="text-break">@c.Value</code>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <span class="badge text-bg-secondary mb-3">
                        <i class="bi bi-person-x me-1"></i> Anonymous
                    </span>
                    <p class="mb-0">
                        Click <a class="link-primary" asp-page="/Auth/Login">Login</a> to sign in.
                    </p>
                }
            </div>
        </div>
    </div>

    <!-- WORKSPACE CARD -->
    @if (User.Identity?.IsAuthenticated ?? false)
    {
        <div class="card shadow-sm">
            <div class="card-header d-flex flex-column flex-md-row align-items-start align-items-md-center gap-2">
                <button class="btn btn-link p-0 text-decoration-none text-reset"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#workspaceCardBody"
                        aria-expanded="false"
                        aria-controls="workspaceCardBody">
                    <h2 class="h5 mb-0">Workspace</h2>
                </button>

                <div class="ms-md-auto d-flex align-items-center gap-2">
                    <div class="dropdown">
                        <button class="btn btn-outline-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            @{
                                var selected = Model.Workspaces.SingleOrDefault(w => w.IsSelected);
                                @:(@(selected?.Name ?? "No workspace"))
                            }
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            @if (Model.Workspaces.Count == 0)
                            {
                                <li class="dropdown-item-text text-body-secondary">No workspaces yet</li>
                                <li><hr class="dropdown-divider" /></li>
                            }
                            else
                            {
                                @foreach (var w in Model.Workspaces)
                                {
                                    <li>
                                        <form method="post" asp-page-handler="SelectWorkspace" class="px-2 py-1">
                                            <input type="hidden" asp-for="SelectedWorkspaceId" value="@w.Id" />
                                            <button type="submit" class="btn btn-link p-0 text-start w-100">
                                                @w.Name
                                                @if (w.IsSelected)
                                                {
                                                    <i class="bi bi-check ms-2"></i>
                                                }
                                            </button>
                                        </form>
                                    </li>
                                }
                                <li><hr class="dropdown-divider" /></li>
                            }
                            <li>
                                <button type="button"
                                        class="dropdown-item"
                                        data-bs-toggle="modal"
                                        data-bs-target="#createWorkspaceModal">
                                    <i class="bi bi-plus-circle me-1"></i> Create new workspace…
                                </button>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <div id="workspaceCardBody" class="collapse">
                <div class="card-body">
                    @if (Model.IsSelectedWorkspaceAdmin)
                    {
                        <button type="button"
                                class="btn btn-outline-secondary btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#inviteUserModal">
                            <i class="bi bi-person-plus me-1"></i> Invite user
                        </button>
                    }
                </div>
            </div>
        </div>
    }
</div>

<!-- Create Workspace Modal -->
<div class="modal fade" id="createWorkspaceModal" tabindex="-1" aria-labelledby="createWorkspaceLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="CreateWorkspace">
                <div class="modal-header">
                    <h5 class="modal-title" id="createWorkspaceLabel">Create workspace</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger small mb-2"></div>
                    <div class="mb-3">
                        <label asp-for="NewWorkspaceName" class="form-label">Name</label>
                        <input asp-for="NewWorkspaceName" class="form-control" autocomplete="off" />
                        <span asp-validation-for="NewWorkspaceName" class="text-danger small"></span>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary btn-sm">
                        <i class="bi bi-check2 me-1"></i> Create
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Invite User Modal -->
<div class="modal fade" id="inviteUserModal" tabindex="-1" aria-labelledby="inviteUserLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Invite">
                <div class="modal-header">
                    <h5 class="modal-title" id="inviteUserLabel">Invite user to workspace</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div asp-validation-summary="All" class="text-danger small mb-2"></div>
                    
                    <input type="hidden" asp-for="SelectedWorkspaceId" value="@(Model.SelectedWorkspaceId)" />

                    <div class="mb-3">
                        <label asp-for="InviteEmail" class="form-label">User email</label>
                        <input asp-for="InviteEmail" class="form-control" type="email" autocomplete="off" />
                        <span asp-validation-for="InviteEmail" class="text-danger small"></span>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary btn-sm">
                        <i class="bi bi-send me-1"></i> Send invite
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @if (ViewData["ShowCreateWorkspaceModal"] as bool? == true)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var el = document.getElementById('createWorkspaceModal');
                if (el) new bootstrap.Modal(el).show();
            });
        </script>
    }

    <script>
    (function () {
      const keys = {
        session: 'cvs.ui.card.session.expanded',
        workspace: 'cvs.ui.card.workspace.expanded'
      };
        
      function applyState(id, key) {
        const el = document.getElementById(id);
        if (!el) return;

        const saved = localStorage.getItem(key);
        const wantExpanded = (saved === null) ? true : (saved === '1');

        const collapse = bootstrap.Collapse.getOrCreateInstance(el, { toggle: false });
        if (wantExpanded) { collapse.show(); } else { collapse.hide(); }
          
        const btn = document.querySelector(`[data-bs-target="#${id}"]`);
        if (btn) btn.setAttribute('aria-expanded', String(wantExpanded));
      }
        
      function wirePersistence(id, key) {
        const el = document.getElementById(id);
        if (!el) return;

        el.addEventListener('shown.bs.collapse', () => localStorage.setItem(key, '1'));
        el.addEventListener('hidden.bs.collapse', () => localStorage.setItem(key, '0'));
      }

      document.addEventListener('DOMContentLoaded', function () {
        applyState('sessionCardBody', keys.session);
        applyState('workspaceCardBody', keys.workspace);

        wirePersistence('sessionCardBody', keys.session);
        wirePersistence('workspaceCardBody', keys.workspace);
      });
    })();
    </script>
    
    @if (ViewData["ShowInviteModal"] as bool? == true)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var el = document.getElementById('inviteUserModal');
                if (el) new bootstrap.Modal(el).show();
            });
        </script>
    }
}
